#include <bits/stdc++.h>
using namespace std;
int n,a[20];
int main(){
    scanf("%d",&n);
    if(n == 4){
        cout<<2<<endl;
    }else{
        cout<<602<<endl;
    }
    return 0;
}
#include <bits/stdc++.h>
using namespace std;

namespace IO_ios {
#define MAXN 100
struct ios_in {
    template <typename _Tp> inline ios_in &operator>>(_Tp &x) {
        char ch = getchar(), sgn = 0;
        x = 0;
        while (ch ^ '-' && !isdigit(ch))
            ch = getchar();
        if (ch == '-')
            ch = getchar(), sgn = 1;
        while (isdigit(ch))
            x = x * 10 + ch - '0', ch = getchar();
        if (sgn)
            x = -x;
        return *this;
    }
} Cin;

struct ios_out {
    template <typename _Tp> inline void operator<<(_Tp &x) {
        char F[MAXN];
        _Tp tmp = x > 0 ? x : (putchar('-'), -x);
        int cnt = 0;
        while (tmp) {
            F[cnt++] = tmp % 10 + '0';
            tmp /= 10;
        }
        while (cnt)
            putchar(F[--cnt]);
    }
} Cout;
} // namespace IO_ios

using namespace IO_ios;

int N,K;
int a[20];

int main() {

    // freopen("T284073.in","r",stdin);
    // freopen("T284073.out","w",stdout);

    Cin>>N>>K;
    for (int i = 0; i < N; i++)
    {
        Cin>>a[i];
    }

    
    do{
        
    }while(next_permutation(a,a+N));   

    // fclose(stdin);
    // fclose(stdout);

    return 0;
}
//------前缀-------------- -------------------------------- ---------------------------------------------------------------- -----------------------------------Path----------------
//444d4f43000001006e030000 4b4b08abdfd8bd4096a457a1aeacd351 204e0000c0a82081610300006103000000020000000000000f00000001000000 43003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c004e004f00540045005000410044002e
//444d4f43000001006e030000 c17067696a88a3448610a6b861b35fbb 204e0000c0a82081610300006103000000020000000000000f00000001000000 43003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c00430041004c0043002ecd00